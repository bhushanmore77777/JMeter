1.With 10 users,all users are hitting server in the time span of 1min
2.User are Visiting 3 pages
3.All users are hitting all pages at same time
4.My URL could be change in future(Keep in mind)
5.Verify all request should perform its task within 5 seconds else make it fail with reason
6.we should not get "ERROR" or "WARNING" text in any of the response
7.Generate tabular report and graph as well



1.With 10 users,all users are hitting server in the time span of 1min
  -Test Plan-->Add-->Threads(Users)-->Thread Group
  -Thread Group-->Name-->Test Case1
  -No.of threads(users)=10
  -Ramp up=60sec(1 min)

2.User are visiting 3 pages 
  -Create 3 Samplers
  -Test Case 1-->Samplers-->HttpRequest(Name=Req1)
  -Test Case 1-->Samplers-->HttpRequest(Name=Req2)
  -Test Case 1-->Samplers-->HttpRequest(Name=Req3)

   1.In Req1=server name/IP=www.thetestingworld.com
     //we are visiting homepage by using 1st req
   2.In Req2=server name/IP=www.thetestingworld.com/jmeter-tutorial
     //we are visiting jmeter-tutorial
   3.In Req3=server name/IP=www.thetestingworld.com/soapUI
    //we are visiting soapUI

3.My URL can be change in future
   Test Case 1-->Add-->Config Element-->HTTP Request Defaults
   In HTTP Request Defaults-->server name/IP=www.thetestingworld.com(Add Base URL)
   1.In Req.1-->server name/IP=make empty because we have already enter same URL in HTTP Request Defaults
      path=/
   2.In Req2.-->server name/IP=empty
      path=/jmeter-tutorial
   3.In Req3.-->server name/IP=empty
      path=/soapUI

4.All users are hitting all pages at same time
  //use Synchronizing Timer
  Test Case 2-->Add-->Timer-->Synchronizing Timer
  In Synchoronizing Timer=no.of users=10

5.Verify all request should perform its task within 5 seconds else make it fail with reason
  //Make assertion on Test Case Level
  //All the response should be come within 5 sec
  Test Case 2-->Add-->Assertion-->Response Assertion
   In Response Assertion-->click Text Response-->should not contains-->Put ERROR WARNING
6.Generate Tabular Report and graph as well
  
  Test Case 2-->Listener-->View Results in Tree
  Test Case 2-->Listener-->View Results in Table
  Test Case 2-->Listener-->Aggregate Graph
